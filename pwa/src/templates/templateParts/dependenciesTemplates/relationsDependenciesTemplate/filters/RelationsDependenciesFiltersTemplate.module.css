.container {
  display: flex;
}

.container > * {
  display: flex;
  align-items: center;
  user-select: none;
}

.container > *.active {
  font-weight: var(--web-app-font-weight-bold);
}

.container > *:hover {
  cursor: pointer;
}

.container > .disabled:hover {
  cursor: no-drop;
}

.container .disabled {
  opacity: var(--web-app-layer-accordion-disabled-opacity);
}

.container > *::before {
  content: " ";
  display: inline-block;
  width: var(--web-app-size-md);
  height: var(--web-app-size-md);
  background-color: var(--web-app-color-background-light);
  margin-inline-end: var(--web-app-size-2xs);
}

.container > *:not(:last-child) {
  margin-inline-end: var(--web-app-size-md);
}

:not(.disabled).filter:not(.active) {
  opacity: var(--web-app-layer-accordion-inactive-opacity);
}

.container > .interactie.active::before {
  background-color: var(--web-app-layer-color-interaction);
}
.container > :not(.disabled).interactie:not(.active)::before {
  background-color: var(--web-app-layer-color-interaction);
}

.container > .proces.active::before {
  background-color: var(--web-app-layer-color-process);
}
.container > :not(.disabled).proces:not(.active)::before {
  background-color: var(--web-app-layer-color-process);
}

.container > .integratie.active::before {
  background-color: var(--web-app-layer-color-integration);
}
.container > :not(.disabled).integratie:not(.active)::before {
  background-color: var(--web-app-layer-color-integration);
}

.container > .service.active::before {
  background-color: var(--web-app-layer-color-services);
}
.container > :not(.disabled).service:not(.active)::before {
  background-color: var(--web-app-layer-color-services);
}

.container > .data.active::before {
  background-color: var(--web-app-layer-color-data);
}
.container > :not(.disabled).data:not(.active)::before {
  background-color: var(--web-app-layer-color-data);
}
