.container > *:not(:last-child) {
  margin-block-end: var(--web-app-size-4xl);
}

.container > .backButton {
  margin-block-start: var(--web-app-size-2xl);
  margin-block-end: var(--web-app-size-sm);
}

.container > .headingContainer {
  display: flex;
  gap: var(--web-app-size-xl);
  margin-block-end: var(--web-app-size-2xl);
}

.headingContent {
  flex: 5;
}

.description {
  margin-block-start: var(--web-app-size-sm) !important;
  margin-block-end: var(--web-app-size-md) !important;
}

.layerAndCategoryContainer {
  display: flex;
  margin-block-end: var(--web-app-size-xs);
}

.layerAndCategoryContainer > *:not(:last-child) {
  margin-inline-end: var(--web-app-size-xs);
}

.tags > div {
  margin-block-end: var(--web-app-size-xs);
}

.tags > *:not(:last-child) {
  margin-inline-end: var(--web-app-size-xs);
}

.addToCatalogusContainer {
  display: flex;
  flex-direction: column;
  flex: 2;
}

.componentImage {
  max-width: var(--web-app-component-image-max-width);
}

.cardsContainer {
  display: flex;
  gap: var(--web-app-size-xl);
}

.organizationCardContainer {
  flex: 5;
}

.infoCard {
  flex: 2;
}
.ratingIndicatorContainer {
  max-height: var(--web-app-component-rating-indicator-max-height);
}

.addToCatalogusContainer > *:not(:last-child) {
  margin-block-end: var(--web-app-size-md);
}

.externalLink {
  text-decoration: none;
}

.components > *:not(:last-child) {
  margin-block-end: var(--web-app-size-xl);
}

.tabPanel {
  padding-inline-start: var(--web-app-size-lg) !important;
  padding-inline-end: var(--web-app-size-lg) !important;
  padding-block-start: var(--web-app-size-lg) !important;
  padding-block-end: var(--web-app-size-lg) !important;
}

.details {
  display: flex;
  justify-content: flex-end;
}

.tab {
  max-width: unset !important;
}

.badgeLayout {
  margin-inline-start: var(--web-app-size-xs);
  align-items: inherit !important;
}

.dependenciesDisplaySwitchButtons {
  display: flex;
  justify-content: flex-end;
}

.dependenciesDisplaySwitchButtons *:not(:last-child) {
  margin-inline-end: var(--web-app-size-xs);
}

.buttonIcon > span > svg {
  margin-inline-end: var(--web-app-size-xs);
}

/* Colors of the 5 layers */
.interactionLayer,
.interfaceLayer {
  --conduction-tag-background-color: var(--web-app-layer-color-interaction);
  --conduction-tag-color: var(--web-app-color-white);
}
.interactionCategory,
.interfaceCategory {
  --conduction-tag-background-color: var(--web-app-layer-category-color-interaction);
}

.processLayer,
.processsLayer {
  --conduction-tag-background-color: var(--web-app-layer-color-process);
  --conduction-tag-color: var(--web-app-color-white);
}
.processCategory,
.processsCategory {
  --conduction-tag-background-color: var(--web-app-layer-category-color-process);
}

.integrationLayer {
  --conduction-tag-background-color: var(--web-app-layer-color-integration);
  --conduction-tag-color: var(--web-app-color-white);
}
.integrationCategory {
  --conduction-tag-background-color: var(--web-app-layer-category-color-integration);
}

.servicesLayer,
.serviceLayer {
  --conduction-tag-background-color: var(--web-app-layer-color-services);
  --conduction-tag-color: var(--web-app-color-white);
}

.servicesCategory,
.serviceCategory {
  --conduction-tag-background-color: var(--web-app-layer-category-color-services);
}

.dataLayer {
  --conduction-tag-background-color: var(--web-app-layer-color-data);
  --conduction-tag-color: var(--web-app-color-white);
}
.dataCategory {
  --conduction-tag-background-color: var(--web-app-layer-category-color-data);
}
